public class TwoD_Array_Intro {
    public static void main(String[] args) {
        // 1. Instantiate a 2-D array gridNums that consists of 4 rows and 6 columns using the new keyword. 
        int[][] gridNums = new int[4][6];
        
        // 2. Instantiate a 2-D array with the following values:
        int[][] instantiateArray= {
            {4, 5, 7},
            {2, -1, 8},
            {0, 1, 3}
        };

        // Print initial values
        System.out.println("Before:");
        printArray(gridNums);
        printArray(instantiateArray);

        // 3. For both of those arrays, change the element in the first row, first column to a 17.
        gridNums[0][0] = 17;
        instantiateArray[0][0]=17;

        // 4. For both of those arrays, change the element in the second row, third column into a 20. 
        gridNums[1][2] = 20;
        instantiateArray[1][2]=20;

        // 5. For both of those arrays, change the last element in the first row to a -5. Accomplish this using .length 
        gridNums[0][gridNums[0].length-1]=-5;
        instantiateArray[0][instantiateArray[0].length-1]=-5;

        // 6. For both of those arrays, change the first element in the last row to a -7. Accomplish this using .length 
        gridNums[gridNums.length-1][0]=-7;
        instantiateArray[instantiateArray.length-1][0]=-7;

        // 7. For both of those arrays, change the last element in the last row to a -30. Accomplish this using .length 
        gridNums[gridNums.length-1][gridNums[0].length-1]=-30;
        instantiateArray[instantiateArray.length-1][instantiateArray[0].length-1]=-30;

        // Print modified values
        System.out.println("After:");
        printArray(gridNums);
        printArray(instantiateArray);
    }

    // 8. Create a method that is passed a 2-D array of ints and one by one prints out each element in the first row. 
    public static void printFirstRow(int[][] array) {
        for (int i=0; i<array[0].length; i++) {
            System.out.print(array[0][i]+" ");
        }
        System.out.println();
    }

    // 9. Create a method that is passed a 2-D array of ints and one by one prints out each element in the first column.
    public static void printFirstColumn(int[][] array) {
        for (int i=0; i<array.length; i++) {
            System.out.print(array[i][0]+" ");
        }
        System.out.println();
    }

    // 10. Create a method that is passed a 2-D array of ints and one by one prints out each element in row-major order. 
    public static void printRowMajor(int[][] array) {
        for (int i=0;i<array.length; i++) {
            for (int j=0; j<array[i].length; j++) {
                System.out.print(array[i][j]+ " ");
            }
        }
        System.out.println();
    }

    // 11. Method to print elements in column-major order.
    public static void printColumnMajor(int[][] array) {
        for (int j=0;j<array[0].length; j++) {
            for (int i=0; i<array.length; i++) {
                System.out.print(array[i][j]+" ");
            }
        }
        System.out.println();
    }

    // Helper method to print the whole array
    public static void printArray(int[][] array) {
        for (int i=0; i<array.length; i++) {
            for (int j=0; j<array[i].length; j++) {
                System.out.print(array[i][j]+ " ");
            }
            System.out.println();
        }
    }
}
